<?xml version="1.0" encoding="UTF-8"?>

<!--
SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>

SPDX-License-Identifier: AGPL-3.0-only
-->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <licenses>
    <license>
      <comments>Copyright (C) 2022 Zextras, https://www.zextras.com</comments>
      <name>AGPL-3.0-only</name>
    </license>
  </licenses>

  <artifactId>carbonio-files-ce-core</artifactId>
  <name>carbonio-files-ce-core</name>

  <parent>
    <artifactId>carbonio-files-ce</artifactId>
    <groupId>com.zextras.carbonio.files</groupId>
    <version>0.12.0-1</version>
  </parent>

  <dependencies>
    <!-- Guice dependencies -->
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-assistedinject</artifactId>
    </dependency>

    <!-- Logger -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>

    <!-- Netty -->
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
    </dependency>

    <!-- Database -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>

    <dependency>
      <artifactId>HikariCP</artifactId>
      <groupId>com.zaxxer</groupId>
    </dependency>

    <dependency>
      <groupId>io.ebean</groupId>
      <artifactId>ebean-postgres</artifactId>
    </dependency>

    <!-- GraphQL -->
    <dependency>
      <groupId>com.graphql-java</groupId>
      <artifactId>graphql-java</artifactId>
    </dependency>

    <!-- Cache -->
    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
    </dependency>

    <!-- Services: storages, authentication, preview -->
    <dependency>
      <groupId>com.zextras.carbonio.user-management</groupId>
      <artifactId>carbonio-user-management-sdk</artifactId>
    </dependency>

    <dependency>
      <groupId>com.zextras.carbonio.message-broker</groupId>
      <artifactId>carbonio-message-broker-sdk</artifactId>
    </dependency>

    <dependency>
      <groupId>com.zextras</groupId>
      <artifactId>storages-ce-sdk</artifactId>
    </dependency>

    <dependency>
      <artifactId>carbonio-preview-sdk</artifactId>
      <groupId>com.zextras.carbonio.preview</groupId>
    </dependency>

    <!-- Utilities: jackson, apache commons-lang and commons-validator -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
    </dependency>

    <!-- Metrics -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>rabbitmq</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.ebean</groupId>
      <artifactId>ebean-platform-hsqldb</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-netty-no-dependencies</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-client-java-no-dependencies</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>io.repaint.maven</groupId>
        <artifactId>tiles-maven-plugin</artifactId>
        <version>${tiles-maven.version}</version>
        <configuration>
          <tiles>
            <tile>io.ebean.tile:enhancement:${ebean.version}</tile>
          </tiles>
        </configuration>
        <extensions>true</extensions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler.version}</version>
        <configuration>
          <release>${java-compiler.version}</release>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe.version}</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <configuration>
              <skipTests>${skip.integration.tests}</skipTests>
            </configuration>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surfire.version}</version>
        <configuration>
          <skipTests>${skip.unit.tests}</skipTests>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${maven-jacoco.version}</version>
        <executions>
          <!-- Integration tests -->
          <execution>
            <id>pre-integration-test</id>
            <configuration>
              <skip>${skip.integration.tests}</skip>
              <destFile>${project.build.directory}/jacoco-it-report/jacoco.exec</destFile>
            </configuration>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
          </execution>

          <execution>
            <id>post-integration-test</id>
            <configuration>
              <skip>${skip.integration.tests}</skip>
              <dataFile>${project.build.directory}/jacoco-it-report/jacoco.exec</dataFile>
              <outputDirectory>${project.build.directory}/jacoco-it-report</outputDirectory>
            </configuration>
            <goals>
              <goal>report-integration</goal>
            </goals>
          </execution>

          <!-- Unit tests -->
          <execution>
            <id>pre-unit-test</id>
            <configuration>
              <skip>${skip.unit.tests}</skip>
              <destFile>${project.build.directory}/jacoco-ut-report/jacoco.exec</destFile>
            </configuration>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>

          <execution>
            <id>post-unit-test</id>
            <configuration>
              <skip>${skip.unit.tests}</skip>
              <dataFile>${project.build.directory}/jacoco-ut-report/jacoco.exec</dataFile>
              <outputDirectory>${project.build.directory}/jacoco-ut-report</outputDirectory>
            </configuration>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>

          <!-- Merge and generate a full report -->
          <execution>
            <id>merge-reports</id>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <skip>${skip.jacoco.full.report.generation}</skip>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}/jacoco-ut-report</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
                <fileSet>
                  <directory>${project.build.directory}/jacoco-it-report</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
              <destFile>${project.build.directory}/jacoco-full-report/merged.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>full-report</id>
            <configuration>
              <skip>${skip.jacoco.full.report.generation}</skip>
              <dataFile>${project.build.directory}/jacoco-full-report/merged.exec</dataFile>
              <outputDirectory>${project.build.directory}/jacoco-full-report</outputDirectory>
            </configuration>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>run-unit-tests</id>
      <properties>
        <skip.unit.tests>false</skip.unit.tests>
        <skip.integration.tests>true</skip.integration.tests>
      </properties>
    </profile>

    <profile>
      <id>run-integration-tests</id>
      <properties>
        <skip.integration.tests>false</skip.integration.tests>
        <skip.unit.tests>true</skip.unit.tests>
      </properties>
    </profile>

    <profile>
      <id>run-all-tests</id>
      <properties>
        <skip.integration.tests>false</skip.integration.tests>
        <skip.unit.tests>false</skip.unit.tests>
      </properties>
    </profile>

    <profile>
      <id>generate-jacoco-full-report</id>
      <properties>
        <skip.jacoco.full.report.generation>false</skip.jacoco.full.report.generation>
        <skip.unit.tests>true</skip.unit.tests>
        <skip.integration.tests>true</skip.integration.tests>
      </properties>
    </profile>
  </profiles>

</project>
